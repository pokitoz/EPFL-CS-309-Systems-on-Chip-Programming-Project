#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following master:
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'vga_sequencer_0', class 'vga_sequencer'
 * The macros are prefixed with 'VGA_SEQUENCER_0_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SEQUENCER_0_COMPONENT_TYPE vga_sequencer
#define VGA_SEQUENCER_0_COMPONENT_NAME vga_sequencer_0
#define VGA_SEQUENCER_0_BASE 0x0
#define VGA_SEQUENCER_0_SPAN 128
#define VGA_SEQUENCER_0_END 0x7f

/*
 * Macros for device 'framebuffer_manager_0', class 'framebuffer_manager'
 * The macros are prefixed with 'FRAMEBUFFER_MANAGER_0_'.
 * The prefix is the slave descriptor.
 */
#define FRAMEBUFFER_MANAGER_0_COMPONENT_TYPE framebuffer_manager
#define FRAMEBUFFER_MANAGER_0_COMPONENT_NAME framebuffer_manager_0
#define FRAMEBUFFER_MANAGER_0_BASE 0x80
#define FRAMEBUFFER_MANAGER_0_SPAN 64
#define FRAMEBUFFER_MANAGER_0_END 0xbf

/*
 * Macros for device 'tw9912_adapter_0', class 'tw9912_adapter'
 * The macros are prefixed with 'TW9912_ADAPTER_0_'.
 * The prefix is the slave descriptor.
 */
#define TW9912_ADAPTER_0_COMPONENT_TYPE tw9912_adapter
#define TW9912_ADAPTER_0_COMPONENT_NAME tw9912_adapter_0
#define TW9912_ADAPTER_0_BASE 0xc0
#define TW9912_ADAPTER_0_SPAN 32
#define TW9912_ADAPTER_0_END 0xdf

/*
 * Macros for device 'msgdma_0_csr', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_0_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_0_CSR_COMPONENT_TYPE altera_msgdma
#define MSGDMA_0_CSR_COMPONENT_NAME msgdma_0
#define MSGDMA_0_CSR_BASE 0xe0
#define MSGDMA_0_CSR_SPAN 32
#define MSGDMA_0_CSR_END 0xff
#define MSGDMA_0_CSR_BURST_ENABLE 1
#define MSGDMA_0_CSR_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_0_CSR_CHANNEL_ENABLE 0
#define MSGDMA_0_CSR_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_0_CSR_CHANNEL_WIDTH 8
#define MSGDMA_0_CSR_DATA_FIFO_DEPTH 32
#define MSGDMA_0_CSR_DATA_WIDTH 32
#define MSGDMA_0_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_0_CSR_DMA_MODE 2
#define MSGDMA_0_CSR_ENHANCED_FEATURES 0
#define MSGDMA_0_CSR_ERROR_ENABLE 0
#define MSGDMA_0_CSR_ERROR_ENABLE_DERIVED 0
#define MSGDMA_0_CSR_ERROR_WIDTH 8
#define MSGDMA_0_CSR_MAX_BURST_COUNT 4
#define MSGDMA_0_CSR_MAX_BYTE 16777216
#define MSGDMA_0_CSR_MAX_STRIDE 1
#define MSGDMA_0_CSR_PACKET_ENABLE 0
#define MSGDMA_0_CSR_PACKET_ENABLE_DERIVED 0
#define MSGDMA_0_CSR_PREFETCHER_ENABLE 0
#define MSGDMA_0_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define MSGDMA_0_CSR_RESPONSE_PORT 2
#define MSGDMA_0_CSR_STRIDE_ENABLE 0
#define MSGDMA_0_CSR_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_0_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_0_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'MSGDMA_0_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MSGDMA_0_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define MSGDMA_0_DESCRIPTOR_SLAVE_COMPONENT_NAME msgdma_0
#define MSGDMA_0_DESCRIPTOR_SLAVE_BASE 0x100
#define MSGDMA_0_DESCRIPTOR_SLAVE_SPAN 16
#define MSGDMA_0_DESCRIPTOR_SLAVE_END 0x10f
#define MSGDMA_0_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define MSGDMA_0_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define MSGDMA_0_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define MSGDMA_0_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define MSGDMA_0_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_0_DESCRIPTOR_SLAVE_DMA_MODE 2
#define MSGDMA_0_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define MSGDMA_0_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 4
#define MSGDMA_0_DESCRIPTOR_SLAVE_MAX_BYTE 16777216
#define MSGDMA_0_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MSGDMA_0_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MSGDMA_0_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_0_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'i2c_0', class 'i2c'
 * The macros are prefixed with 'I2C_0_'.
 * The prefix is the slave descriptor.
 */
#define I2C_0_COMPONENT_TYPE i2c
#define I2C_0_COMPONENT_NAME i2c_0
#define I2C_0_BASE 0x110
#define I2C_0_SPAN 4
#define I2C_0_END 0x113


#endif /* _ALTERA_HPS_0_H_ */
